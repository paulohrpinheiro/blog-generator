#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'
require 'parseconfig'

require_relative '../lib/gerablog'

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = 'Usage: optparse [options]'

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  options[:config] = nil
  opts.on('-c', '--config FILENAME', 'Use a config file.') do |value|
    options[:config] = value
  end

  default_root = GeraBlog::Blog.new().root_dir
  options[:root] = default_root
  opts.on(
    '-r',
    "--root FILENAME (default '#{default_root}')",
    'Root dir for project'
  ) do |value|
    options[:root] = value
  end

  options[:new] = false
  opts.on('-n','--new', 'Create a new project.') do
    options[:new] = true
  end

  options[:generate] = false
  opts.on('-g','--generate', 'Generate the static blog.') do |value|
    options[:generate] = value
  end
end

optparse.parse!

gb = GeraBlog::Blog.new(root_dir: options[:root])

gb.load_config options[:config] unless options[:config].nil?

if options[:generate]
  gb.render!
  gb.save
  puts gb.posts.map { |p| p[:category] }.uniq
elsif options[:new]
  [gb.root_dir, gb.output_dir, gb.texts_dir, gb.template_dir, gb.assets_dir].each do |dir|
    Dir.mkdir(dir) unless Dir.exist?(dir)
  end

  FileUtils.cp_r(
    File.join(__dir__, '..', 'assets'),
    gb.assets_dir,
    remove_destination: true
  )

  FileUtils.cp_r(
    File.join(__dir__, '..', 'templates'),
    gb.template_dir,
    remove_destination:true
  )

  config = ParseConfig.new
  config.add 'blog', {
    url: gb.url,
    title: gb.title,
    name: gb.name,
    description: gb.description,
    language: gb.language
  }
  config.add 'template', {
    categories: gb.template[:categories],
    feed: gb.template[:feed],
    post: gb.template[:post]
  }
  config.add 'dir', {
    root: gb.root_dir,
    texts: gb.texts_dir,
    assets: gb.assets_dir,
    output: gb.output_dir,
    template: gb.template_dir
  }
  file = File.open(File.join(gb.root_dir, 'gerablog.conf'), 'w')
  config.write(file)
else
  puts optparse.parse! %w[--help]
end
