#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'
require 'parseconfig'

require_relative '../lib/gerablog'

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = 'Usage: optparse [options]'

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  options[:config] = nil
  opts.on('-c', '--config FILENAME', 'Use a config file.') do |value|
    options[:config] = value
  end

  default_root = GeraBlog::Blog.new.config['dir']['root']
  options[:root] = default_root
  opts.on(
    '-r', "--root FILENAME (default '#{default_root}')", "Project's root dir"
  ) do |value|
    options[:root] = value
  end

  options[:new] = false
  opts.on('-n', '--new', 'Create a new project.') do
    options[:new] = true
  end

  options[:generate] = false
  opts.on('-g', '--generate', 'Generate the static blog.') do |value|
    options[:generate] = value
  end
end

optparse.parse!

gb = GeraBlog::Blog.new
gb = GeraBlog::Blog.new(options[:root]) unless options[:root].nil?
gb.load_config options[:config] unless options[:config].nil?

if options[:generate]
  gb.save
elsif options[:new]
  puts gb.config['dir'].values
  gb.config['dir'].values.map { |dir| Dir.mkdir(dir) unless Dir.exist?(dir) }
  GeraBlog.make_dest_dir(
    File.join(__dir__, '..', 'assets'),
    gb.config['dir']['assets'],
    remove: true
  )

  GeraBlog.make_dest_dir(
    File.join(__dir__, '..', 'templates'),
    gb.config['dir']['template'],
    remove: true
  )

  puts gb.config['dir']['root']
  file = File.open(File.join(gb.config['dir']['root'], 'gerablog.conf'), 'w')
  gb.config.write(file)
else
  puts optparse.parse! %w(--help)
end
